{
  "address": "0x00Af168D213CBa1214dB4FBF1986aA3E2182DD4D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_baseCurrencyUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "FeedNotSet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceIsStale",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proxy1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proxy2",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lowerThresholdInBase1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fixedPriceInBase1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lowerThresholdInBase2",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fixedPriceInBase2",
          "type": "uint256"
        }
      ],
      "name": "CompositeFeedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "CompositeFeedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lowerThresholdInBase1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fixedPriceInBase1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lowerThresholdInBase2",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fixedPriceInBase2",
          "type": "uint256"
        }
      ],
      "name": "CompositeFeedUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "API3_BASE_CURRENCY_UNIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "API3_HEARTBEAT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_CURRENCY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_CURRENCY_UNIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ORACLE_MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proxy1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proxy2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lowerThresholdInBase1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixedPriceInBase1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerThresholdInBase2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixedPriceInBase2",
          "type": "uint256"
        }
      ],
      "name": "addCompositeFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compositeFeeds",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxy1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proxy2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lowerThresholdInBase1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixedPriceInBase1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerThresholdInBase2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixedPriceInBase2",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getPriceInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isAlive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "heartbeatStaleTimeLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "removeCompositeFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newHeartbeatStaleTimeLimit",
          "type": "uint256"
        }
      ],
      "name": "setHeartbeatStaleTimeLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lowerThresholdInBase1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixedPriceInBase1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerThresholdInBase2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fixedPriceInBase2",
          "type": "uint256"
        }
      ],
      "name": "updateCompositeFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdfb6d024f5b1c3621fb530c7790cdcfb3a8c486254084d0682136dc5ed90cc95",
  "receipt": {
    "to": null,
    "from": "0x53Ae1433Ab4563d7D5a84d27524784837259f105",
    "contractAddress": "0x00Af168D213CBa1214dB4FBF1986aA3E2182DD4D",
    "transactionIndex": 1,
    "gasUsed": "851752",
    "logsBloom": "0x
    "blockHash": "0xf5672a0cd8312279cd86b93c53cf89aa99b8705ee673a483b08b72ce06d5a7b4",
    "transactionHash": "0xdfb6d024f5b1c3621fb530c7790cdcfb3a8c486254084d0682136dc5ed90cc95",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 16177255,
        "transactionHash": "0xdfb6d024f5b1c3621fb530c7790cdcfb3a8c486254084d0682136dc5ed90cc95",
        "address": "0x00Af168D213CBa1214dB4FBF1986aA3E2182DD4D",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000053ae1433ab4563d7d5a84d27524784837259f105",
          "0x00000000000000000000000053ae1433ab4563d7d5a84d27524784837259f105"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf5672a0cd8312279cd86b93c53cf89aa99b8705ee673a483b08b72ce06d5a7b4"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 16177255,
        "transactionHash": "0xdfb6d024f5b1c3621fb530c7790cdcfb3a8c486254084d0682136dc5ed90cc95",
        "address": "0x00Af168D213CBa1214dB4FBF1986aA3E2182DD4D",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c18",
          "0x00000000000000000000000053ae1433ab4563d7d5a84d27524784837259f105",
          "0x00000000000000000000000053ae1433ab4563d7d5a84d27524784837259f105"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xf5672a0cd8312279cd86b93c53cf89aa99b8705ee673a483b08b72ce06d5a7b4"
      }
    ],
    "blockNumber": 16177255,
    "cumulativeGasUsed": "897718",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "100000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "65375786c18a7663ff9bec250991068a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseCurrencyUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"FeedNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceIsStale\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase2\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase2\",\"type\":\"uint256\"}],\"name\":\"CompositeFeedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"CompositeFeedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase2\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase2\",\"type\":\"uint256\"}],\"name\":\"CompositeFeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"API3_BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"API3_HEARTBEAT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ORACLE_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proxy1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proxy2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase2\",\"type\":\"uint256\"}],\"name\":\"addCompositeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compositeFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proxy2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase2\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getPriceInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAlive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"heartbeatStaleTimeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"removeCompositeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newHeartbeatStaleTimeLimit\",\"type\":\"uint256\"}],\"name\":\"setHeartbeatStaleTimeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerThresholdInBase2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedPriceInBase2\",\"type\":\"uint256\"}],\"name\":\"updateCompositeFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The price of the asset\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BASE_CURRENCY()\":{\"notice\":\"Returns the base currency address\"},\"BASE_CURRENCY_UNIT()\":{\"notice\":\"Returns the base currency unit\"},\"getAssetPrice(address)\":{\"notice\":\"Returns the asset price in the base currency\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol\":\"API3CompositeWrapperWithThresholding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-5/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts-5/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\"},\"@openzeppelin/contracts-5/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-5/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts-5/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/lending/core/interfaces/IPriceOracleGetter.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title IPriceOracleGetter\\n * @author Aave\\n * @notice Interface for the Aave price oracle.\\n */\\ninterface IPriceOracleGetter {\\n    /**\\n     * @notice Returns the base currency address\\n     * @dev Address 0x0 is reserved for USD as base currency.\\n     * @return Returns the base currency address.\\n     */\\n    function BASE_CURRENCY() external view returns (address);\\n\\n    /**\\n     * @notice Returns the base currency unit\\n     * @dev 1 ether for ETH, 1e8 for USD.\\n     * @return Returns the base currency unit.\\n     */\\n    function BASE_CURRENCY_UNIT() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns the asset price in the base currency\\n     * @param asset The address of the asset\\n     * @return The price of the asset\\n     */\\n    function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8c254b3ea9802d3fe13e05f69663c64d093d617f1fe55c2b2fb9820c5cd80679\",\"license\":\"AGPL-3.0\"},\"contracts/oracle_aggregator/interface/IOracleWrapper.sol\":{\"content\":\"// // SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"contracts/lending/core/interfaces/IPriceOracleGetter.sol\\\";\\n\\n/**\\n * @dev Interface for the individual oracle wrappers, to unify interface between Redstone and API3 for example\\n */\\ninterface IOracleWrapper is IPriceOracleGetter {\\n    function getPriceInfo(\\n        address asset\\n    ) external view returns (uint256 price, bool isAlive);\\n}\\n\",\"keccak256\":\"0x43761b8643a647687422479069968dfaddbf92f291d0193c6dab5021da1a0a1c\",\"license\":\"MIT\"},\"contracts/oracle_aggregator/interface/api3/IAPI3Wrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"../IOracleWrapper.sol\\\";\\nimport \\\"@openzeppelin/contracts-5/access/AccessControl.sol\\\";\\n\\nabstract contract IAPI3Wrapper is IOracleWrapper, AccessControl {\\n    /* Core state */\\n\\n    uint256 public constant API3_BASE_CURRENCY_UNIT = 10 ** 18;\\n    uint256 public constant API3_HEARTBEAT = 24 hours;\\n    address public constant BASE_CURRENCY = address(0);\\n    uint256 public immutable BASE_CURRENCY_UNIT;\\n    uint256 public heartbeatStaleTimeLimit = 30 minutes;\\n\\n    /* Roles */\\n\\n    bytes32 public constant ORACLE_MANAGER_ROLE =\\n        keccak256(\\\"ORACLE_MANAGER_ROLE\\\");\\n\\n    /* Errors */\\n\\n    error PriceIsStale();\\n\\n    constructor(uint256 _baseCurrencyUnit) {\\n        BASE_CURRENCY_UNIT = _baseCurrencyUnit;\\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        _grantRole(ORACLE_MANAGER_ROLE, msg.sender);\\n    }\\n\\n    function getPriceInfo(\\n        address asset\\n    ) public view virtual override returns (uint256 price, bool isAlive);\\n\\n    function getAssetPrice(\\n        address asset\\n    ) external view virtual override returns (uint256) {\\n        (uint256 price, bool isAlive) = getPriceInfo(asset);\\n        if (!isAlive) {\\n            revert PriceIsStale();\\n        }\\n        return price;\\n    }\\n\\n    function _convertToBaseCurrencyUnit(\\n        uint256 price\\n    ) internal view returns (uint256) {\\n        return (price * BASE_CURRENCY_UNIT) / API3_BASE_CURRENCY_UNIT;\\n    }\\n\\n    function setHeartbeatStaleTimeLimit(\\n        uint256 _newHeartbeatStaleTimeLimit\\n    ) external onlyRole(ORACLE_MANAGER_ROLE) {\\n        heartbeatStaleTimeLimit = _newHeartbeatStaleTimeLimit;\\n    }\\n}\\n\",\"keccak256\":\"0x036ed09d28b5c6841048373b11bb678f0f39fd778fc48fe1aaf6fb1fa3191644\",\"license\":\"MIT\"},\"contracts/oracle_aggregator/interface/api3/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @dev See DapiProxy.sol for comments about usage\\ninterface IProxy {\\n    function read() external view returns (int224 value, uint32 timestamp);\\n\\n    function api3ServerV1() external view returns (address);\\n}\\n\",\"keccak256\":\"0x3ad69ef6ff3de4056ec43eb8b47465f3d896f88e95cfffb909a6d057b91db17b\",\"license\":\"MIT\"},\"contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"../interface/api3/IAPI3Wrapper.sol\\\";\\nimport \\\"@openzeppelin/contracts-5/access/AccessControl.sol\\\";\\nimport {IProxy} from \\\"../interface/api3/IProxy.sol\\\";\\n\\ncontract API3CompositeWrapperWithThresholding is IAPI3Wrapper {\\n    /* Core state */\\n\\n    struct CompositeFeed {\\n        address proxy1;\\n        address proxy2;\\n        uint256 lowerThresholdInBase1;\\n        uint256 fixedPriceInBase1;\\n        uint256 lowerThresholdInBase2;\\n        uint256 fixedPriceInBase2;\\n    }\\n\\n    mapping(address => CompositeFeed) public compositeFeeds;\\n\\n    /* Events */\\n\\n    event CompositeFeedAdded(\\n        address indexed asset,\\n        address proxy1,\\n        address proxy2,\\n        uint256 lowerThresholdInBase1,\\n        uint256 fixedPriceInBase1,\\n        uint256 lowerThresholdInBase2,\\n        uint256 fixedPriceInBase2\\n    );\\n    event CompositeFeedRemoved(address indexed asset);\\n    event CompositeFeedUpdated(\\n        address indexed asset,\\n        uint256 lowerThresholdInBase1,\\n        uint256 fixedPriceInBase1,\\n        uint256 lowerThresholdInBase2,\\n        uint256 fixedPriceInBase2\\n    );\\n\\n    /* Errors */\\n\\n    error FeedNotSet(address asset);\\n\\n    constructor(uint256 _baseCurrencyUnit) IAPI3Wrapper(_baseCurrencyUnit) {\\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        _grantRole(ORACLE_MANAGER_ROLE, msg.sender);\\n    }\\n\\n    function addCompositeFeed(\\n        address asset,\\n        address proxy1,\\n        address proxy2,\\n        uint256 lowerThresholdInBase1,\\n        uint256 fixedPriceInBase1,\\n        uint256 lowerThresholdInBase2,\\n        uint256 fixedPriceInBase2\\n    ) external onlyRole(ORACLE_MANAGER_ROLE) {\\n        compositeFeeds[asset] = CompositeFeed(\\n            proxy1,\\n            proxy2,\\n            lowerThresholdInBase1,\\n            fixedPriceInBase1,\\n            lowerThresholdInBase2,\\n            fixedPriceInBase2\\n        );\\n        emit CompositeFeedAdded(\\n            asset,\\n            proxy1,\\n            proxy2,\\n            lowerThresholdInBase1,\\n            fixedPriceInBase1,\\n            lowerThresholdInBase2,\\n            fixedPriceInBase2\\n        );\\n    }\\n\\n    function removeCompositeFeed(\\n        address asset\\n    ) external onlyRole(ORACLE_MANAGER_ROLE) {\\n        delete compositeFeeds[asset];\\n        emit CompositeFeedRemoved(asset);\\n    }\\n\\n    function updateCompositeFeed(\\n        address asset,\\n        uint256 lowerThresholdInBase1,\\n        uint256 fixedPriceInBase1,\\n        uint256 lowerThresholdInBase2,\\n        uint256 fixedPriceInBase2\\n    ) external onlyRole(ORACLE_MANAGER_ROLE) {\\n        CompositeFeed storage feed = compositeFeeds[asset];\\n        if (feed.proxy1 == address(0) || feed.proxy2 == address(0)) {\\n            revert FeedNotSet(asset);\\n        }\\n        feed.lowerThresholdInBase1 = lowerThresholdInBase1;\\n        feed.fixedPriceInBase1 = fixedPriceInBase1;\\n        feed.lowerThresholdInBase2 = lowerThresholdInBase2;\\n        feed.fixedPriceInBase2 = fixedPriceInBase2;\\n        emit CompositeFeedUpdated(\\n            asset,\\n            lowerThresholdInBase1,\\n            fixedPriceInBase1,\\n            lowerThresholdInBase2,\\n            fixedPriceInBase2\\n        );\\n    }\\n\\n    function getPriceInfo(\\n        address asset\\n    ) public view override returns (uint256 price, bool isAlive) {\\n        CompositeFeed memory feed = compositeFeeds[asset];\\n        if (feed.proxy1 == address(0) || feed.proxy2 == address(0)) {\\n            revert FeedNotSet(asset);\\n        }\\n\\n        (int224 value1, uint32 timestamp1) = IProxy(feed.proxy1).read();\\n        (int224 value2, uint32 timestamp2) = IProxy(feed.proxy2).read();\\n\\n        uint256 api3Price1 = value1 > 0 ? uint256(uint224(value1)) : 0;\\n        uint256 api3Price2 = value2 > 0 ? uint256(uint224(value2)) : 0;\\n\\n        uint256 priceInBase1 = _convertToBaseCurrencyUnit(api3Price1);\\n        uint256 priceInBase2 = _convertToBaseCurrencyUnit(api3Price2);\\n\\n        // Apply thresholding to individual prices if specified\\n        if (feed.lowerThresholdInBase1 > 0) {\\n            api3Price1 = _applyThreshold(\\n                api3Price1,\\n                feed.lowerThresholdInBase1,\\n                feed.fixedPriceInBase1\\n            );\\n        }\\n        if (feed.lowerThresholdInBase2 > 0) {\\n            priceInBase2 = _applyThreshold(\\n                priceInBase2,\\n                feed.lowerThresholdInBase2,\\n                feed.fixedPriceInBase2\\n            );\\n        }\\n\\n        price = (priceInBase1 * priceInBase2) / BASE_CURRENCY_UNIT;\\n        isAlive =\\n            price > 0 &&\\n            block.timestamp - timestamp1 <=\\n            API3_HEARTBEAT + heartbeatStaleTimeLimit &&\\n            block.timestamp - timestamp2 <=\\n            API3_HEARTBEAT + heartbeatStaleTimeLimit;\\n    }\\n\\n    function getAssetPrice(\\n        address asset\\n    ) external view override returns (uint256) {\\n        (uint256 price, bool isAlive) = getPriceInfo(asset);\\n        if (!isAlive) {\\n            revert PriceIsStale();\\n        }\\n        return price;\\n    }\\n\\n    function _applyThreshold(\\n        uint256 priceInBase,\\n        uint256 lowerThresholdInBase,\\n        uint256 fixedPriceInBase\\n    ) internal pure returns (uint256) {\\n        if (priceInBase > lowerThresholdInBase) {\\n            return fixedPriceInBase;\\n        }\\n        return priceInBase;\\n    }\\n}\\n\",\"keccak256\":\"0xd4352ecbf6ef696591cc3f8d2b57e03c634b9e1c548285105e57d0bd0ad7cd9f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a03461008f57601f610eee38819003918201601f19168301916001600160401b038311848410176100945780849260209460405283398101031261008f5751610708600155608052610051336100aa565b5061005b33610128565b50610065336100aa565b5061006f33610128565b50604051610d0590816101c982396080518181816104d60152610af70152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff1661012457818052816020526040822081835260205260408220600160ff198254161790553391600080516020610ece8339815191528180a4600190565b5090565b6001600160a01b031660008181527ffb8036e0bab3828a1a1cce97396031bc7ea8a361699e1bc9c4844f3aeee78d6e60205260408120549091907fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c189060ff166101c357808352826020526040832082845260205260408320600160ff19825416179055600080516020610ece833981519152339380a4600190565b50509056fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146107255750806304dea6511461064a578063248a9ca31461061b5780632ecac6fc146105fd5780632f2ff15d146105be57806336568abe14610577578063519ffff1146104f95780638c89b64f146104be5780638edbf436146104925780638f5997151461031e57806391d14854146102d1578063a217fddf146101d5578063b3596f071461028e578063bfc69e1c14610253578063c5efe27c14610232578063d547741f146101f1578063e19f4700146101d5578063f99256d514610141578063fbff771c1461011e5763ffceb415146100fb57600080fd5b34610119576000366003190112610119576020604051620151808152f35b600080fd5b34610119576000366003190112610119576020604051670de0b6b3a76400008152f35b34610119576020366003190112610119576001600160a01b0380610163610778565b1660005260026020526040600020906101d181835416916001840154169260028101549060038101546005600483015492015492604051968796879260a09491979695929760c0850198600180881b0380921686521660208501526040840152606083015260808201520152565b0390f35b3461011957600036600319011261011957602060405160008152f35b346101195760403660031901126101195761023060043561021061078e565b9080600052600060205261022b60016040600020015461081e565b6108c2565b005b346101195760203660031901126101195761024b6107a4565b600435600155005b346101195760003660031901126101195760206040517fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c188152f35b34610119576020366003190112610119576102af6102aa610778565b6109ef565b156102bf57602090604051908152f35b6040516342bc305b60e11b8152600490fd5b34610119576040366003190112610119576102ea61078e565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101195760e036600319011261011957610337610778565b61033f61078e565b906044356001600160a01b03811690819003610119577f8af3f37e726b4aaf30de76bd00359c9166bf6b9a01e457c3d4557df631227eed9161048d916103836107a4565b6040519061039082610937565b60018060a01b038616825260208201526064356040820152608435606082015260a435608082015260c43560a082015260018060a01b0382166000526002602052600560a0604060002092600180831b038151166bffffffffffffffffffffffff831b90818654161785556001850190600180851b0360208401511690825416179055604081015160028501556060810151600385015560808101516004850155015191015560405191829160018060a01b03169460c4359060a43590608435906064359060443590879260a09491979695929760c0850198600180881b0380921686521660208501526040840152606083015260808201520152565b0390a2005b346101195760203660031901126101195760406104b06102aa610778565b825191825215156020820152f35b346101195760003660031901126101195760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461011957602036600319011261011957610512610778565b61051a6107a4565b60018060a01b0316806000526002602052600060056040822082815582600182015582600282015582600382015582600482015501557fdabc58d0456c50872fa82879bc9ce7f6a455b4372db632857a62de4abd099691600080a2005b346101195760403660031901126101195761059061078e565b336001600160a01b038216036105ac57610230906004356108c2565b60405163334bd91960e11b8152600490fd5b34610119576040366003190112610119576102306004356105dd61078e565b908060005260006020526105f860016040600020015461081e565b610844565b34610119576000366003190112610119576020600154604051908152f35b346101195760203660031901126101195760043560005260006020526020600160406000200154604051908152f35b346101195760a036600319011261011957610663610778565b6024356084356064356044356106776107a4565b6001600160a01b039485166000818152600260205260409020805491969091811615908115610716575b506106fd579183916080946005858860027fbdebb389cb3e5b0a7c038b900aeea5b6e265e74efd0de50488c3574a4d7861d59a9801558360038201558460048201550155604051938452602084015260408301526060820152a2005b604051630dcaf86b60e01b815260048101879052602490fd5b905060018201541615876106a1565b34610119576020366003190112610119576004359063ffffffff60e01b821680920361011957602091637965db0b60e01b8114908115610767575b5015158152f35b6301ffc9a760e01b14905083610760565b600435906001600160a01b038216820361011957565b602435906001600160a01b038216820361011957565b3360009081527ffb8036e0bab3828a1a1cce97396031bc7ea8a361699e1bc9c4844f3aeee78d6e60205260409020547fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c189060ff16156108005750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600060205260406000203360005260205260ff60406000205416156108005750565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416156000146108bd57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054166000146108bd5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b60c0810190811067ffffffffffffffff82111761095357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761095357604052565b919082604091031261011957815180601b0b81036101195760209092015163ffffffff811681036101195790565b818102929181159184041417156109cc57565b634e487b7160e01b600052601160045260246000fd5b919082039182116109cc57565b6001600160a01b0390811660008181526002602052604080822081519495949291610a1984610937565b868254168085528760018401541694602081019686885260028501548483015260038501546060830152600496600588870154966080850197885201549360a0840194855215908115610cb5575b50610c9f57508890511697825190838288816315f789a960e21b9d8e82525afa978815610c955786928799610c70575b50908491511699878251809c819382525afa988915610c66578593869a610c23575b505091610b359391610b46938681601b0b13600014610c1b576001600160e01b0316915b8681601b0b13600014610c13576001600160e01b0316915b7f000000000000000000000000000000000000000000000000000000000000000095868092610b2e670de0b6b3a76400009485926109b9565b04946109b9565b0492519081610bfd575b50506109b9565b8115610bea5704948515159384610baa575b5083610b65575b50505090565b610b789192935063ffffffff16426109e2565b906001549262015180938401809411610b975750501115388080610b5f565b634e487b7160e01b825260119052602490fd5b610bbc91945063ffffffff16426109e2565b6001549062015180918201809211610bd75711159238610b58565b634e487b7160e01b835260118452602483fd5b634e487b7160e01b835260128452602483fd5b90610c0b9293915191610cbe565b903880610b3f565b508591610af5565b508591610add565b610b359593929a50610b4694509081610c5092903d10610c5f575b610c488183610969565b81019061098b565b91909199919381939550610ab9565b503d610c3e565b83513d87823e3d90fd5b610c8c91995085809394503d8411610c5f57610c488183610969565b98909291610a97565b84513d88823e3d90fd5b86602491855191630dcaf86b60e01b8352820152fd5b90501538610a67565b91908211610cca575090565b90509056fea26469706673582212208388576efb9e7576159464f54e1ec2a4a26930ffc15e1d32d0bb3e7b6bd2450a64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146107255750806304dea6511461064a578063248a9ca31461061b5780632ecac6fc146105fd5780632f2ff15d146105be57806336568abe14610577578063519ffff1146104f95780638c89b64f146104be5780638edbf436146104925780638f5997151461031e57806391d14854146102d1578063a217fddf146101d5578063b3596f071461028e578063bfc69e1c14610253578063c5efe27c14610232578063d547741f146101f1578063e19f4700146101d5578063f99256d514610141578063fbff771c1461011e5763ffceb415146100fb57600080fd5b34610119576000366003190112610119576020604051620151808152f35b600080fd5b34610119576000366003190112610119576020604051670de0b6b3a76400008152f35b34610119576020366003190112610119576001600160a01b0380610163610778565b1660005260026020526040600020906101d181835416916001840154169260028101549060038101546005600483015492015492604051968796879260a09491979695929760c0850198600180881b0380921686521660208501526040840152606083015260808201520152565b0390f35b3461011957600036600319011261011957602060405160008152f35b346101195760403660031901126101195761023060043561021061078e565b9080600052600060205261022b60016040600020015461081e565b6108c2565b005b346101195760203660031901126101195761024b6107a4565b600435600155005b346101195760003660031901126101195760206040517fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c188152f35b34610119576020366003190112610119576102af6102aa610778565b6109ef565b156102bf57602090604051908152f35b6040516342bc305b60e11b8152600490fd5b34610119576040366003190112610119576102ea61078e565b600435600052600060205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101195760e036600319011261011957610337610778565b61033f61078e565b906044356001600160a01b03811690819003610119577f8af3f37e726b4aaf30de76bd00359c9166bf6b9a01e457c3d4557df631227eed9161048d916103836107a4565b6040519061039082610937565b60018060a01b038616825260208201526064356040820152608435606082015260a435608082015260c43560a082015260018060a01b0382166000526002602052600560a0604060002092600180831b038151166bffffffffffffffffffffffff831b90818654161785556001850190600180851b0360208401511690825416179055604081015160028501556060810151600385015560808101516004850155015191015560405191829160018060a01b03169460c4359060a43590608435906064359060443590879260a09491979695929760c0850198600180881b0380921686521660208501526040840152606083015260808201520152565b0390a2005b346101195760203660031901126101195760406104b06102aa610778565b825191825215156020820152f35b346101195760003660031901126101195760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461011957602036600319011261011957610512610778565b61051a6107a4565b60018060a01b0316806000526002602052600060056040822082815582600182015582600282015582600382015582600482015501557fdabc58d0456c50872fa82879bc9ce7f6a455b4372db632857a62de4abd099691600080a2005b346101195760403660031901126101195761059061078e565b336001600160a01b038216036105ac57610230906004356108c2565b60405163334bd91960e11b8152600490fd5b34610119576040366003190112610119576102306004356105dd61078e565b908060005260006020526105f860016040600020015461081e565b610844565b34610119576000366003190112610119576020600154604051908152f35b346101195760203660031901126101195760043560005260006020526020600160406000200154604051908152f35b346101195760a036600319011261011957610663610778565b6024356084356064356044356106776107a4565b6001600160a01b039485166000818152600260205260409020805491969091811615908115610716575b506106fd579183916080946005858860027fbdebb389cb3e5b0a7c038b900aeea5b6e265e74efd0de50488c3574a4d7861d59a9801558360038201558460048201550155604051938452602084015260408301526060820152a2005b604051630dcaf86b60e01b815260048101879052602490fd5b905060018201541615876106a1565b34610119576020366003190112610119576004359063ffffffff60e01b821680920361011957602091637965db0b60e01b8114908115610767575b5015158152f35b6301ffc9a760e01b14905083610760565b600435906001600160a01b038216820361011957565b602435906001600160a01b038216820361011957565b3360009081527ffb8036e0bab3828a1a1cce97396031bc7ea8a361699e1bc9c4844f3aeee78d6e60205260409020547fced6982f480260bdd8ad5cb18ff2854f0306d78d904ad6cc107e8f3a0f526c189060ff16156108005750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600060205260406000203360005260205260ff60406000205416156108005750565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416156000146108bd57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054166000146108bd5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b60c0810190811067ffffffffffffffff82111761095357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761095357604052565b919082604091031261011957815180601b0b81036101195760209092015163ffffffff811681036101195790565b818102929181159184041417156109cc57565b634e487b7160e01b600052601160045260246000fd5b919082039182116109cc57565b6001600160a01b0390811660008181526002602052604080822081519495949291610a1984610937565b868254168085528760018401541694602081019686885260028501548483015260038501546060830152600496600588870154966080850197885201549360a0840194855215908115610cb5575b50610c9f57508890511697825190838288816315f789a960e21b9d8e82525afa978815610c955786928799610c70575b50908491511699878251809c819382525afa988915610c66578593869a610c23575b505091610b359391610b46938681601b0b13600014610c1b576001600160e01b0316915b8681601b0b13600014610c13576001600160e01b0316915b7f000000000000000000000000000000000000000000000000000000000000000095868092610b2e670de0b6b3a76400009485926109b9565b04946109b9565b0492519081610bfd575b50506109b9565b8115610bea5704948515159384610baa575b5083610b65575b50505090565b610b789192935063ffffffff16426109e2565b906001549262015180938401809411610b975750501115388080610b5f565b634e487b7160e01b825260119052602490fd5b610bbc91945063ffffffff16426109e2565b6001549062015180918201809211610bd75711159238610b58565b634e487b7160e01b835260118452602483fd5b634e487b7160e01b835260128452602483fd5b90610c0b9293915191610cbe565b903880610b3f565b508591610af5565b508591610add565b610b359593929a50610b4694509081610c5092903d10610c5f575b610c488183610969565b81019061098b565b91909199919381939550610ab9565b503d610c3e565b83513d87823e3d90fd5b610c8c91995085809394503d8411610c5f57610c488183610969565b98909291610a97565b84513d88823e3d90fd5b86602491855191630dcaf86b60e01b8352820152fd5b90501538610a67565b91908211610cca575090565b90509056fea26469706673582212208388576efb9e7576159464f54e1ec2a4a26930ffc15e1d32d0bb3e7b6bd2450a64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ]
    },
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "getAssetPrice(address)": {
        "params": {
          "asset": "The address of the asset"
        },
        "returns": {
          "_0": "The price of the asset"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "BASE_CURRENCY()": {
        "notice": "Returns the base currency address"
      },
      "BASE_CURRENCY_UNIT()": {
        "notice": "Returns the base currency unit"
      },
      "getAssetPrice(address)": {
        "notice": "Returns the asset price in the base currency"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 193,
        "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)"
      },
      {
        "astId": 11311,
        "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
        "label": "heartbeatStaleTimeLimit",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 11447,
        "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
        "label": "compositeFeeds",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(CompositeFeed)11442_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(CompositeFeed)11442_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct API3CompositeWrapperWithThresholding.CompositeFeed)",
        "numberOfBytes": "32",
        "value": "t_struct(CompositeFeed)11442_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)188_storage"
      },
      "t_struct(CompositeFeed)11442_storage": {
        "encoding": "inplace",
        "label": "struct API3CompositeWrapperWithThresholding.CompositeFeed",
        "members": [
          {
            "astId": 11431,
            "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
            "label": "proxy1",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 11433,
            "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
            "label": "proxy2",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 11435,
            "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
            "label": "lowerThresholdInBase1",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 11437,
            "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
            "label": "fixedPriceInBase1",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 11439,
            "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
            "label": "lowerThresholdInBase2",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 11441,
            "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
            "label": "fixedPriceInBase2",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(RoleData)188_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 185,
            "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 187,
            "contract": "contracts/oracle_aggregator/wrapper/API3CompositeWrapperWithThresholding.sol:API3CompositeWrapperWithThresholding",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}